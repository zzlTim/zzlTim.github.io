<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>工具分享 on ZZL的博客</title>
        <link>http://localhost:1313/categories/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/</link>
        <description>Recent content in 工具分享 on ZZL的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Example Person</copyright>
        <lastBuildDate>Sun, 21 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/categories/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>vue-element-admin后台集成方案</title>
        <link>http://localhost:1313/p/vue-element-admin%E5%90%8E%E5%8F%B0%E9%9B%86%E6%88%90%E6%96%B9%E6%A1%88/</link>
        <pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/vue-element-admin%E5%90%8E%E5%8F%B0%E9%9B%86%E6%88%90%E6%96%B9%E6%A1%88/</guid>
        <description>&lt;img src="http://localhost:1313/2.jpg" alt="Featured image of post vue-element-admin后台集成方案" /&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://panjiachen.github.io/vue-element-admin-site/zh/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://panjiachen.github.io/vue-element-admin-site/zh/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;错误： git SSL certificate problem: unable to get local issuer certificate&lt;/p&gt;
&lt;p&gt;这个问题是由于没有配置信任的服务器HTTPS验证。默认，cURL被设为不信任任何CAs，就是说，它不信任任何服务器验证。&lt;/p&gt;
&lt;p&gt;只需要执行下面命令就可以解决：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global http.sslVerify false
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_64760783/article/details/131340578&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安装失败可以看这个&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>最优雅的OneNote</title>
        <link>http://localhost:1313/p/onenote/</link>
        <pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/onenote/</guid>
        <description>&lt;img src="http://localhost:1313/2.jpg" alt="Featured image of post 最优雅的OneNote" /&gt;&lt;p&gt;用户认证一般流程
用户向服务器发送用户名和密码
服务器验证通过后，在当前对话（session）保存相关数据，比如登录时间
服务器返回一个session_id,写入用户的cooKie
用户之后的每一次请求，都会通过cookie，将session_id传回服务器
服务器根据session_id，找到之前保存的数据，得知用户身份&lt;/p&gt;
&lt;p&gt;但是这样session扩展性不好，多台服务器如何共享session
每次请求服务，分配的服务器可能不同
①session持久化，写入数据库
②数据保存在客户端，每次请求都发回服务器，Token认证就是代表&lt;/p&gt;
&lt;p&gt;Token是服务端产生的字符串，是客户端访问资源节课（API）所需的资源凭证，
客户端使用用户名和密码，服务端收到请求，验证
验证成功，服务器会签发一个token病把这个token发送给客户端
客户端收到token后，会存起来，放到cookie或者localstorage
客户端每次请求服务器都要带这个签发的token（令牌）
服务端收到请求，去验证token，验证成功就返回它请求的数据&lt;/p&gt;
&lt;p&gt;token方法服务器不存数据，因此减轻压力
但是解析token需要时间，因此用时间换空间
token由应用管理，可以避开同源策略&lt;/p&gt;
&lt;p&gt;JWT是JSON Web Token
JWT原理是，服务器认证后，生产一个json对象，发回给用户
{“姓名”：’111‘,
&amp;ldquo;角色&amp;rdquo;：‘root’,
“到期时间”:&amp;lsquo;2022-2-2-0:0&amp;rsquo;
}
每次通信，都要发回这个json对象，服务器完全靠这个认证用户身份
为了防止用户篡改，会生产对象时加上签名&lt;/p&gt;
&lt;p&gt;JWT有3部分
header头部
payload负载
signature签名
最终组合为一个字符串，用.分开
Header部分是一个json对象，描述JWT的元数据，例如签名算法“alg”:&amp;ldquo;HS256&amp;rdquo;,令牌类型‘type’：‘JWT’
payload也是json，存实际需要传递的数据选用，客户也看得到
signature只有服务器知道，利用签名header的签名算法生成签名&lt;/p&gt;
&lt;p&gt;JWT可以存在cookie也可以存在localSTORAGE
但是这样不能跨域
所以最好放在HTTP请求的头信息“authorization”&lt;/p&gt;
</description>
        </item>
        <item>
        <title>最优雅的OneNote</title>
        <link>http://localhost:1313/p/%E6%9C%80%E4%BC%98%E9%9B%85%E7%9A%84onenote/</link>
        <pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/%E6%9C%80%E4%BC%98%E9%9B%85%E7%9A%84onenote/</guid>
        <description>&lt;img src="http://localhost:1313/2.jpg" alt="Featured image of post 最优雅的OneNote" /&gt;&lt;p&gt;onenote for windows 10
优雅,无需多言
&lt;a class=&#34;link&#34; href=&#34;https://apps.microsoft.com/store/detail/onenote/9WZDNCRFHVJL?hl=en-us&amp;amp;ql=us&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://apps.microsoft.com/store/detail/onenote/9WZDNCRFHVJL?hl=en-us&amp;ql=us&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
